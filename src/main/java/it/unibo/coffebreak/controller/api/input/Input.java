package it.unibo.coffebreak.controller.api.input;

import it.unibo.coffebreak.controller.api.command.Command;

/**
 * Represents an input handler that processes user input and translates it into
 * game commands.
 * This interface follows the Command pattern to decouple input handling from
 * command execution.
 *
 * <p>
 * Implementations of this interface should:
 * <ul>
 * <li>Handle raw input from keyboard</li>
 * <li>Translate input events into appropriate {@link Command} objects</li>
 * <li>Optionally notify observers about new commands</li>
 * </ul>
 * 
 * @author Alessandro Rebosio
 */
public interface Input {

    /**
     * Retrieves the current command generated by the most recent input.
     * 
     * @return the current {@link Command} object representing the user's input,
     *         or a no-operation command if no relevant input is available
     */
    Command getCommand();

    /**
     * Notifies the input handler about a command that should be processed.
     * This method can be used to implement command queuing or to allow external
     * systems to inject commands into the input pipeline.
     *
     * @param command the {@link Command} to be processed by the input system
     * @throws IllegalArgumentException if the provided command is null
     */
    void notifyCommand(Command command);
}
